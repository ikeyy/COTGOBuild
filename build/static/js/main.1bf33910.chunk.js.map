{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","stlye","float","style","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","htmlFor","PictureOutlined","type","multiple","id","display","files","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bf33910.chunk.js","sourcesContent":["const MyMessage = ({message}) => {\r\n    if (message?.attachments?.length > 0){\r\n        return(\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                stlye= {{ float: 'right'}}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className =\"message\" style={{float: 'right' , marginRight: '18px' , color: 'white' , backgroundColor: '#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    );\r\n\r\n    \r\n}\r\n\r\nexport default MyMessage;","const TheirMessage = ({ lastMessage , message}) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n\r\n    return (\r\n        <div className = \"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                    className = \"message-avatar\"\r\n                    style = {{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                \r\n                />\r\n            )}\r\n            { message?.attachments?.length > 0\r\n                        ? (\r\n                            <img \r\n                                src={message.attachments[0].file}\r\n                                alt=\"message-attachment\"\r\n                                className=\"message-image\"\r\n                                stlye= {{ marginLeft: isFirstMessageByUser ? '4px' : '48px'}}\r\n                            />\r\n                        ) : (\r\n                            <div className =\"message\" style={{float: 'left' , backgroundColor: '#CABCDC' , marginLeft: isFirstMessageByUser ? '4px' : '48px'}}>\r\n                                {message.text}\r\n                            </div>\r\n                        )\r\n            }\r\n               \r\n        </div>\r\n    );\r\n\r\n    \r\n}\r\n\r\nexport default TheirMessage;","import { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons'\r\n\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const { chatId , creds} = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds,chatId, { text });\r\n\r\n        setValue('');\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds,chatId, { files : event.target.files ,text :''})\r\n    }\r\n\r\n\r\n    return (\r\n        <form className = \"message-form\" onSubmit = {handleSubmit}>\r\n            <input\r\n                className = \"message-input\"\r\n                placeholder = \"Send a message...\"\r\n                value = {value}\r\n                onChange = {handleChange}\r\n                onSubmit = {handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className = \"image-button\">\r\n                    <PictureOutlined className =\"picture-icon\"/>\r\n                </span>\r\n            </label>\r\n            <input \r\n                type=\"file\"\r\n                multiple = {false}\r\n                id = \"upload-button\"\r\n                style = {{ display: 'none'}}\r\n                onChange = {handleUpload}\r\n            />\r\n            <button type=\"submit\" className = \"send-button\" >\r\n                <SendOutlined className = \"send-icon\"/>\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    \r\n}\r\n\r\nexport default MessageForm;","import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message , isMyMessage ) => {\r\n        return chat.people.map((person,index) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"  \r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys [index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n                    <div className=\"message-block\">\r\n                        {isMyMessage\r\n                            ? <MyMessage message={message} />\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                        {renderReadReceipts(message,isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    if(!chat) return 'Loading...';\r\n\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat?.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => ` ${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px' }} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios'; \r\n\r\nconst projectID = 'c333f047-28d7-4f77-8f15-b9f9eeb138ce';\r\n\r\nconst Modal = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n            setError('');\r\n        } catch (err) {\r\n            setError('Oops, incorrect credentials.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start chatting</span>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <h1>{error}</h1>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Modal;","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatFeed'\r\n\r\nimport LoginForm from './components/LoginForm'\r\n\r\nimport './App.css';\r\n\r\n\r\nconst App = () => {\r\n\r\n    if(!localStorage.getItem('username')) return <LoginForm />\r\n\r\n    return (\r\n        <ChatEngine\r\n            height = \"100vh\"\r\n            projectID = \"41690def-6ef9-44e0-85b9-ca874e1b02d0\"\r\n            userName = {localStorage.getItem('username')}\r\n            userSecret = {localStorage.getItem('password')}\r\n            renderChatFeed = {(chatAppProps) => <ChatFeed {... chatAppProps} /> }    \r\n        />\r\n    )\r\n\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}